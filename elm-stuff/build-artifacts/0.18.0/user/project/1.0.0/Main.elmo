var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$init = function (location) {
	return {
		ctor: '_Tuple2',
		_0: _user$project$Route$locationToPage(location),
		_1: _elm_lang$core$Platform_Cmd$none
	};
};
var _user$project$Main$SetPage = function (a) {
	return {ctor: 'SetPage', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'TransitionPage') {
			return {
				ctor: '_Tuple2',
				_0: _user$project$Route$updatePageTransition(model),
				_1: A2(
					_user$project$Route$transitionFromPage,
					model,
					_user$project$Main$SetPage(_p0._0))
			};
		} else {
			return {ctor: '_Tuple2', _0: _p0._0, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$TransitionPage = function (a) {
	return {ctor: 'TransitionPage', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: function () {
				var _p1 = model;
				switch (_p1.ctor) {
					case 'Page1':
						return A2(_user$project$Pages_Page1$view, _p1._0, _user$project$Main$TransitionPage);
					case 'Page2':
						return A3(_user$project$Pages_Page2$view, _p1._0, _p1._1, _user$project$Main$TransitionPage);
					default:
						return A2(_user$project$Pages_Page3$view, _p1._0, _user$project$Main$TransitionPage);
				}
			}(),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	function (_p2) {
		return _user$project$Main$TransitionPage(
			_user$project$Route$locationToPage(_p2));
	},
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
